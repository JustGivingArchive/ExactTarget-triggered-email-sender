{"name":"Sending transactional emails with ExactTarget SOAP API","tagline":"Made easy in .Net by Alwyn Lombaard","body":"## How to send a transactional (Triggered Send Definition) email with ExactTarget SOAP API\r\n\r\n25 June 2014\r\n\r\n##Why I had to make it easy##\r\n\r\nSending a transactional email using ExactTarget is the biggest pain in the butt that I had to endure as a developer lately because setting up a new one required me to log in to ExactTarget and shaving yaks called \"Data Extension\", \"Triggered Send\", \"Triggered Send Definition\", \"Delivery Profile\", \"Email Templates\" etc.. I just wanted to be able to send a simple transactional email without first having to perform a number of steps in the cumbersome ExactTarget UI ....so I created this library to make my life easier when I need to set up a new transactional email. I hope this can help some poor soul out there suffering the same fate I have.\r\n\r\n <a href=\"https://plus.google.com/104188129605360544174?rel=author\">Alwyn Lombaard</a>\r\n\r\n##Getting started\r\n\r\nYou require an API user name, password and endpoint before you can call the SOAP API. Assuming you have those, here is a simple way of how you can send (and create) a transactional email.\r\n\r\nInstall the following from Nuget:\r\n```\r\nPM> Install-Package ExactTarget.TriggerEmailSender\r\n```\r\n\r\n##Configure\r\n```C#\r\nvar config = new ExactTargetConfiguration\r\n{\r\n\tApiUserName = \"API_User\",\r\n\tApiPassword = \"API_Password\",\r\n\t//use your endpoint given to you by ET\r\n\tEndPoint = \"https://webservice.s6.exacttarget.com/Service.asmx\",\r\n\tClientId = 6269485//optional: business unit id you wish to use\r\n};\r\n```\r\n\r\n\r\n##If you don't have a \"Triggered Send\" set up yet##\r\n\r\nYou can set up a new one easily without the need of logging into ExactTarget to do it.\r\n\r\n### Step 1: Setup a new email \r\n\r\nYou only need to perform this step once for each email type you want to trigger. (For example order confirmation, welcome registration, order dispatched etc)\r\n\r\nExample\r\n```C#\r\n//create and start Triggered Send (only required to do this once)\r\nvar triggeredEmailCreator = new TriggeredEmailCreator(config);\r\n\r\ntriggeredEmailCreator.Create(\"order-confirmation\",\r\n                            \"<html><head><style>.green{color:green}</style></head>\" +\r\n                            \"<body><p>Dear %%FirstName%%,</p>\" +\r\n                            \"<p>Your order has been processed</p>\" +\r\n                            \"<p>%%OrderSummary%%</p> \" +\r\n                            \"<p class='green'>Once again,  thank you!</p>\" +\r\n                            \"</body></html>\");\r\n\r\ntriggeredEmailCreator.StartTriggeredSend(\"order-confirmation\");\r\n```\r\n* The above example will create a TriggeredSendDefinition,\r\nData Extension with \"Subject\" and the replacement values specified in your\r\nHtml layout markup (%%FirstName%%, %%OrderSummary%%), Paste HTML Email and a \r\nDelivery Profile for the Data Extension without header and footer in ExactTarget.\r\n\r\n### Step 2: Sending a transactional email\r\n-------------------------------------\r\n\r\nNow you can trigger an email. You give replacement values for Subject, Body and Head parts of the email. Head value is used to inject css into the head part of the email if you want to style the HTML version of the email.\r\n```C#\r\nvar triggeredEmail = new ExactTargetTriggeredEmail(\"order-confirmation\",\r\n                                                \"recipient@temp.uri\");\r\n\r\ntriggeredEmail.AddReplacementValue(\"Subject\", \"Thank you for placing your order\");\r\ntriggeredEmail.AddReplacementValue(\"FirstName\", \"John\");\r\ntriggeredEmail.AddReplacementValue(\"OrderSummary\", \"<ul><li>Item 1</li><li>Item 2</li></ul>\");\r\n          \r\nvar emailTrigger = new EmailTrigger(config);\r\nemailTrigger.Trigger(triggeredEmail);\r\n```\r\n\r\n\r\n\r\n##If you already have a \"Triggered Send\" set up \r\n\r\n\r\n\r\n```C#\r\n//the email to trigger\r\n var triggeredEmail = new ExactTargetTriggeredEmail(\"external-key-of-trigger\", \r\n                                \"recipient@uri.test\" );\r\n\r\n//specify values for the Data Extension if any (optional)\r\ntriggeredEmail.AddReplacementValue(\"DataExtensionFieldName1\", \"Value 1\");\r\ntriggeredEmail.AddReplacementValue(\"DataExtensionFieldName2\", \"Value 2\");\r\n\r\n//trigger the email\r\nvar emailTrigger = new EmailTrigger(config);\r\nemailTrigger.Trigger(triggeredEmail);\r\n```\r\n","google":"UA-52220218-1","note":"Don't delete this file! It's used internally to help with page regeneration."}